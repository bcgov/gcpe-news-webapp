@using Gov.News.Website;
@using Gov.News.Website.Helpers;
@using System.Web;

@model Post

@{
    var ifShow = (string)ViewData["Display"];


    // you can check host here => uri.Host <= "www.youtube.com"

    var videoId = "0";

    if (!String.IsNullOrEmpty(Model.AssetUrl))
    {
        var uri = new Uri(Model.AssetUrl);
        var query = HttpUtility.ParseQueryString(uri.Query);
        videoId = query["v"];
    }

}


<style>
    .asset .placeholder-container .overlay-container .outer .inner .play-button a {
        width: 64px !important;
        height: 64px !important;
    }

    .asset .placeholder-container .overlay-container .outer .inner .play-button {
        width: 64px !important;
        height: 64px !important;
    }

    .asset .placeholder-container .overlay-container .outer .inner {
        height: 64px !important;
    }

        .asset .placeholder-container .overlay-container .outer .inner.not-expanded {
            
            width: 64px !important;
        }

    .youtube-wrapper {
        max-width: 100% !important;
    }
</style>
<div class="article@((ifShow != null && ifShow == "false") ? " hidden-article" : "")">
    <h2><a href="@Model.GetUri()">@Model.Headline()</a></h2>

    <div class="row" style="padding-left:15px; padding-right:15px; padding-bottom:10px;">
        <span class="item-date">@Model.PublishDate.Value.FormatDateLong()</span>
        @if (Model.HasTranslations.HasValue && Model.HasTranslations == true)
        {
            <span class="item-medialink translations">
                <a href="@Model.GetUri()#translations"><i class="fa fa-language fa-lg" style="font-size: 1.5em; font-weight: 600;" aria-hidden="true"></i> Translations</a>
            </span>

        }
        @if (Model.HasMediaAssets.HasValue && Model.HasMediaAssets == true)
        {
            <span class="item-medialink media-assets">
                <a href="@Model.GetUri()#assets">Media Assets</a>
            </span>
        }
    </div>
    <div class="item-content">

        @{ var thumbnailUri = Model.GetThumbnailUri(); }
        @if (thumbnailUri != null)
        {
            <div class='item-asset asset flickr' id="youtube-asset-@Model.Key">
                <!--

                <div class='story-copy primary-asset item-asset asset flickr' id="youtube-asset-@Model.Key">
                   -->
                <!--
                <a href='@Model.GetUri()'><img src='@thumbnailUri.ToProxyUrl()' /></a>
                 -->
                @if (thumbnailUri.ToString().Contains("youtube"))
                {

                    @AssetHelper.RenderPostAsset(@Model.AssetUrl.ToUri()).ShowLinks()
                }
                else
                {
                    <a href='@Model.GetUri()'><img src='@thumbnailUri.ToProxyUrl()' /></a>
                }

                <!--
                     <div class="video">
                    <div class="video-box">
                        <a class="thumbnail-link">
                            <img src="@thumbnailUri.ToProxyUrl()" class="video-thumbnail">
                            <iframe class="video-frame" width="100%" height="100%" src="@Model.AssetUrl?vq=hd720&showinfo=0&autohide=1&color=white&controls=2&modestbranding=1&theme=light" frameborder="0" allowfullscreen>
                            </iframe>
                        </a>
                    </div>
                </div>
                -->

            </div>
        }
        <div class="item-text@(thumbnailUri == null ? "" : " with-image")">
            @Model.Summary.AsHtmlParagraphs()
            @*@Html.ActionLink("Read More", "Story", "Default", null, new { @class = "read-more" })*@
            <br />
            <a href="@Model.GetUri()" class="read-more">Read More</a>
        </div>
    </div>
    <div class="clear"></div>
</div>




