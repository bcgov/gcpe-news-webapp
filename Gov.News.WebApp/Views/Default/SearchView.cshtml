@using Gov.News.Website.Helpers;
@using Gov.News.Website.Models
@using Newtonsoft.Json;
@model SearchViewModel

<div class="search">
    <div class="search-body">
        <h3>Search</h3>

        @if (ViewBag.Status404NotFound == true)
        {
            <div style="font-size: 18px;">That web page doesn't exist.</div>
            <br />
            <div style="font-size: 14px;">The URL may be misspelled or the page you're looking for is no longer available. See search results below.</div>
            <br /><br />
        }

    </div>

    <div class="clear"></div>
    @using (Html.BeginForm("Search", "Default", FormMethod.Get))
    {
        <div class="search-panel search-filters">
            @foreach (var facetResult in Model.FacetResults)
            {
                <div class="search-filter">
                    <h5 class="open">@facetResult.Key</h5>
                    <div class="search-filter-content" style="display:block">
                        @{ string filterValue = Model.Query.Filters?.ContainsKey(facetResult.Key) == true ? Model.Query.Filters[facetResult.Key] : null;}
                        @if (facetResult.Key == "Date" && filterValue == null)
                        {
                            <div>
                                Custom Range
                                <div class='input-group date' id='publishFromDate'>
                                    <input type='text' class="form-control" name='fromDate' value='@(Model.Query.FromDate.ToString("MM/dd/yyyy"))' />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                <div class='input-group date' id='publishToDate'>
                                    <input type='text' class="form-control" name="toDate" value='@(Model.Query.ToDate.ToString("MM/dd/yyyy"))' />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <br />
                        }
                        <ul>
                            @foreach (var facetHit in facetResult.Value)
                            {
                                string facetHitValue;
                                if (facetResult.Key != "Date" || !SearchViewModel.DateCollections.TryGetValue(facetHit.Value, out facetHitValue))
                                {
                                    facetHitValue = facetHit.Value;
                                }
                                <li>
                                    @if (filterValue != null)
                                    {
                                        <a href="Search?@Model.QueryString(facetResult.Key, null)"><img src="~/Content/Images/close-icon.png" /></a><span> @facetHitValue</span>
                                    }
                                    else
                                    {
                                        <a href="Search?@Model.QueryString(facetResult.Key, @facetHit.Value)">@facetHitValue</a>
                                    }
                                    <span>: @facetHit.Count</span>
                                </li>
                            }
                            @if (facetResult.Key == "Date" && filterValue == null && !Model.Query.UseCustomRange())
                            {
                                <li><a href="http://archive.news.gov.bc.ca/Default.aspx?archive=2009-2013">June 11, 2009 to March 11, 2011</a></li>
                                <li><a href="http://archive.news.gov.bc.ca/archive/2005-2009/">May 18, 2005 to June 9, 2009</a></li>
                                <li><a href="http://archive.news.gov.bc.ca/archive/2001-2005/">June 5, 2001 to May 10, 2005</a></li>
                                <li><a href="http://archive.news.gov.bc.ca/archive/pre2001/default.htm">April 29, 1994 to June 5, 2001</a></li>
                            }
                        </ul>
                        <input name='@facetResult.Key' type='hidden' disabled='@(filterValue == null ? "disabled" : null)' value='@filterValue' />
                    </div>
                </div>
            }

            <div style="margin-top: 10px">
                <a href="/search" class="link-button">RESET SEARCH</a>
            </div>
        </div>

        @*  DEVNOTE: For no filters, add the no-filters class*@
        <div class="home-body search-results">

            <div class="search-panel">
                <label>You searched for</label>
                <div class="search-panel-bar">
                    <input name="q" type="text" value="@Model.Query.Text" placeholder="Search news.gov.bc.ca" />
                    <div class="search-trigger"> </div>
                </div>
            </div>

            @if (!Model.Results.Any())
            {
                <br /><h4>No results found.</h4>
            }
            else
            {
                <div class="search-numbers">
                    Showing results @Model.FirstResult - @Model.LastResult of @Model.Count
                </div>
            }

            @foreach (var result in Model.Results)
            {
                <div class="article">
                    <h2><a href="@result.Uri">@result.Title</a></h2>
                    @if (result.HasMediaAssets)
                    {
                        <div class="item-medialink media-assets"><a href="@result.Uri#assets">Media Assets</a></div>
                    }
                    <div class="item-date">@result.PublishDate.ToLocalTime().FormatDateLong()</div>
                    <div class="item-content">
                        @if (result.ThumbnailUri != null)
                        {
                            <div class='asset flickr'><a href='@result.Uri'><img src='@result.ThumbnailUri.ToProxyUrl()' /></a></div>
                        }
                        <div class="item-text@(result.ThumbnailUri == null ? "" : " with-image")">
                            @result.Description.AsHtmlParagraphs()
                            <a href="@result.Uri" class="read-more">Read More</a>
                        </div>
                    </div>
                    <div class="clear"></div>
                </div>
            }
        </div>

        <div class="search-pagination bottom">
            <ul>

                @if (Model.Page > 1)
                {
                    <li> <a id="prev" href="Search?@Model.QueryString("Page", (Model.Page - 1).ToString())">&laquo;prev</a></li>
                }

                @for (long i = Math.Max(1, Model.Page - 4); i <= Math.Min(Model.LastPage, Model.Page + 4); i++)
                {
                    if (i == Model.Page)
                    {
                        <li><b>@i</b></li>
                    }
                    else
                    {
                        <li><a href="Search?@Model.QueryString("Page", i.ToString())">@i</a></li>
                    }
                }

                @if (Model.Page < Model.LastPage)
                {
                    <li><a id="next" href="Search?@Model.QueryString("Page", (Model.Page + 1).ToString())">next &raquo;</a></li>
                }
            </ul>
            <input name='page' type='hidden' disabled='disabled' />
        </div>
    }

    <div class="clear"></div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/moment.min.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <link rel="stylesheet" href="~/Content/bootstrap-datetimepicker.min.css" media="screen" type="text/css" />
    <script type="text/javascript">
        var minDate = '@SearchViewModel.MinDate.ToString("MM/dd/yyyy")';
        var maxDate = '@DateTime.Today.ToString("MM/dd/yyyy")';
        $(function () {
            $(".input-group.date").datetimepicker({
                format: 'MM/DD/YYYY',
                useCurrent: false,
                maxDate: maxDate,
                minDate: minDate,
            }).on('dp.change', function (e) {
                $(this).closest('form').submit();
            });

            $(".search-filters .search-filter h5").on('click', function () {
                var headerToggler = $(this);
                headerToggler.parent().find('.search-filter-content').toggle();
                headerToggler.toggleClass('open');
            });
            $("li a").on('click', function (e) {
                var hiddenInput = $(this).closest("ul").siblings("input");
                if (hiddenInput.attr("disabled")) {
                    hiddenInput.val(decodeURIComponent(e.target.href.substr(e.target.href.lastIndexOf('=') + 1)));
                    hiddenInput.removeAttr("disabled");
                } else {
                    hiddenInput.remove();
                }
                $(this).closest('form').submit();
            });
            $(".search-trigger").on('click', function () {
                $(this).closest('form').submit();
            });
            $(".mini-search-trigger").on('click', function (e) {
                // for mobiles
                var searchPanels = $(".search-panel");
                if (searchPanels.is(":visible")) {
                    searchPanels.hide();
                } else {
                    searchPanels.show();
                }
            });
        });

        document.onkeypress = function enter(e) {
            if (e.which === 13) { document.forms[0].submit(); }
        };
        $(document).on('submit', 'form', function () {
            // remove default parameters from the url
            var fromDate = $("[name='fromDate']");
            if (fromDate.val() == minDate) {
                fromDate.attr("disabled", "disabled");
            }
            var toDate = $("[name='toDate']");
            if (toDate.val() == maxDate) {
                toDate.attr("disabled", "disabled");
            }
        });
        window.snowplow('trackSiteSearch',
            ['@Html.Raw(Model.Query.Text?.Replace(" ", "', '"))'],
            @Html.Raw(JsonConvert.SerializeObject(Model.AllQueryFilters())),
            @Model.Count);

    </script>
}